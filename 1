<!DOCTYPE html>
<html lang="zh-CN">
<head>
<meta charset="UTF-8">
<title>数据处理工具</title>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css">
<style>
  #copySuccessMsg {
    display: none;
    color: green;
  }
</style>
</head>
<body>
<div class="container mt-5">
  <h1 class="text-center">数据处理工具</h1>
  <div class="row">
    <div class="col-md-6">
      <div class="mb-3">
        <label for="dataInput" class="form-label">粘贴您的数据：</label>
        <textarea class="form-control" id="dataInput" rows="6" placeholder="在此粘贴数据"></textarea>
      </div>
      <button id="processButton" class="btn btn-primary">空格/制表符转逗号</button>
      <button id="reverseButton" class="btn btn-secondary">逗号转空格</button>
      <button id="quoteButton" class="btn btn-success">添加单引号</button>
      <button id="clearButton" class="btn btn-danger">清空数据</button>
    </div>
    <div class="col-md-6">
      <div class="mb-3">
        <label for="processedOutput" class="form-label">处理后的数据：</label>
        <textarea class="form-control" id="processedOutput" rows="6"></textarea>
      </div>
      <button id="copyButton" class="btn btn-success" disabled>复制结果</button>
      <div id="copySuccessMsg"></div>
    </div>
  </div>
</div>

<script>
  const processButton = document.getElementById('processButton');
  const reverseButton = document.getElementById('reverseButton');
  const quoteButton = document.getElementById('quoteButton');
  const clearButton = document.getElementById('clearButton');
  const copyButton = document.getElementById('copyButton');
  const dataInput = document.getElementById('dataInput');
  const processedOutput = document.getElementById('processedOutput');
  const copySuccessMsg = document.getElementById('copySuccessMsg');

  processButton.addEventListener('click', () => processInput(/\s+/g, ','));
  reverseButton.addEventListener('click', () => reverseInput(','));
  quoteButton.addEventListener('click', addQuotes);
  clearButton.addEventListener('click', clearData);
  copyButton.addEventListener('click', copyOutput);

  function processInput(regex, newDelimiter) {
    let inputData = dataInput.value.trim();
    // 如果输入数据包含空格或制表符且不包含逗号，则执行替换
    if ((/\s/).test(inputData) && !inputData.includes(',')) {
      processedOutput.value = inputData.replace(regex, newDelimiter);
      processedOutput.readOnly = false; // 允许编辑
      copyButton.disabled = false;
    }
  }

  function reverseInput(oldDelimiter) {
    let inputData = dataInput.value.trim();
    // Replace only if the delimiter (comma) is present
    if (inputData.includes(oldDelimiter)) {
      processedOutput.value = inputData.replace(/,+/g, ' ');
      processedOutput.readOnly = false; // 允许编辑
      copyButton.disabled = false;
    }
  }

  function addQuotes() {
    let inputData = dataInput.value.trim();
    // 检测输入数据是否以逗号分隔
    if (inputData.includes(',')) {
      // 仅为逗号分隔的数据添加单引号
      let quotedData = inputData.split(',').map(item => "'" + item.trim() + "'");
      processedOutput.value = quotedData.join(', ');
      processedOutput.readOnly = false; // 允许编辑
      copyButton.disabled = false;
    }
    // 如果不包含逗号，则不执行任何操作
  }

  function clearData() {
    dataInput.value = '';
    processedOutput.value = '';
    processedOutput.readOnly = true; // 重置为只读
    copyButton.disabled = true;
  }

  function copyOutput() {
    processedOutput.select();
    document.execCommand('copy');
    copySuccessMsg.textContent = '复制成功!';
    copySuccessMsg.style.display = 'block';
    setTimeout(() => { copySuccessMsg.style.display = 'none'; }, 2000);
  }
</script>
